box: node:6.10
build:
  steps:
    - script:
        name: A step that executes `npm install` command
        code: npm install
    
    - kubectl:
        name: create namespace    
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: apply -f $WERCKER_ROOT/kubernetes-namespace.yml
 
    - script:
        name: wait to create namespace
        code: sleep 10     

push-to-docker-registry:
  steps:
    # Push to public docker repo Container Registry (CR)
    - internal/docker-push:
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD
        tag: ${WERCKER_GIT_COMMIT}
        repository: $DOCKER_REPOSITORY
        registry: https://index.docker.io/v2/
        cmd: node /pipeline/source/app.js

deploy-to-oke:
  steps:
    # execute kubectl command
    - kubectl:
          name: execute kubectl command
          debug: true
          server: $KUBERNETES_MASTER
          token: $KUBERNETES_TOKEN
          insecure-skip-tls-verify: true
          command: set image deployment/jscreditscore jscreditscore=docker.io/kmebus/jscreditscore:${WERCKER_GIT_COMMIT}
          
    - script:
        name: "Visualise Ingress config"
        code: cat ingress.yml.template

    - kubectl:
        name: create Ingress configuration
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: apply -f $WERCKER_ROOT/ingress.yml.template --namespace=$WERCKER_APPLICATION_OWNER_NAME
          
    - kubectl:
        name: get LoadBalancer public IP address
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: get svc -o jsonpath='{.items[*].status.loadBalancer.ingress[*].ip}' --all-namespaces
